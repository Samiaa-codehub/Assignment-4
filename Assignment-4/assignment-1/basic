{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Samiaa-codehub/Assignment-4/blob/main/Assignment-4/assignment-1/basic\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 0-*Joke*"
      ],
      "metadata": {
        "id": "aQef1whxnftX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#decalre variables\n",
        "Prompt = \"What  do you want?\"\n",
        "JOKE = \"Here is a joke for you! Panaversity GPT - Sophia is heading out to the grocery store. A programmer tells her: get a liter of milk, and if they have eggs, get 12. Sophia returns with 13 liters of milk. The programmer asks why and Sophia replies: 'because they had eggs'\"\n",
        "Sorrry =\"Sorry I only tell jokes.\"\n",
        "#decalre function\n",
        "def  joke():\n",
        "    user_input = input(Prompt)\n",
        "    if user_input == \"joke\":\n",
        "        print(JOKE)\n",
        "    else:\n",
        "        print(Sorrry)\n",
        "#call function\n",
        "joke()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0zoPNon2pAhv",
        "outputId": "cc5ceb44-2c71-4eaa-92d4-8ca64746e98f"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "What  do you want?joke\n",
            "Here is a joke for you! Panaversity GPT - Sophia is heading out to the grocery store. A programmer tells her: get a liter of milk, and if they have eggs, get 12. Sophia returns with 13 liters of milk. The programmer asks why and Sophia replies: 'because they had eggs'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 01_Double-***it***"
      ],
      "metadata": {
        "id": "uBrZyAHApCnN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def main():\n",
        "    # Ask the user for a starting number\n",
        "    curr_value = int(input(\"Enter a number: \"))\n",
        "\n",
        "\n",
        "    while curr_value < 100:\n",
        "        curr_value = curr_value * 2\n",
        "        print(curr_value)\n",
        "\n",
        "if __name__ == '__main__':\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mgklvaACpcKn",
        "outputId": "d87b2329-5def-4a48-b49d-5d9fb0ba32ea"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter a number: 2\n",
            "4\n",
            "8\n",
            "16\n",
            "32\n",
            "64\n",
            "128\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# ***02_lifoff***"
      ],
      "metadata": {
        "id": "qRtRKpbop8Qp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def main():\n",
        "    #for loop isliyai use huwa h q ky isme humai end point pata hai\n",
        "    for i in range(10):\n",
        "        print(i)\n",
        "    print(\"liftoff!\")\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ABsJOD6MqNkc",
        "outputId": "95d9915d-ca01-4981-91e8-ce81c8eed5ca"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "liftoff!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# ***03_guessing_number***"
      ],
      "metadata": {
        "id": "BD3T9PfxqQQ0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "my_number=random.randint(1, 99)\n",
        "print(\"I am thinking of a number between 1 and 99...\")\n",
        "\n",
        "user_guess:int=int(input(\"Enter a guess: \"))\n",
        "while user_guess != my_number:\n",
        "    if user_guess < my_number:\n",
        "        print(\" Your guess is too low!\")\n",
        "    else:\n",
        "        print(\" Your guess is too high!\")\n",
        "    user_guess:int=int(input(\"Enter a  new guess: \"))\n",
        "print(\"Congratulations! \"+str(my_number), \" is the number I was thinking of!\")\n",
        "print(\"Thanks for playing!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fH08Ka0UqfQd",
        "outputId": "d0e4d6a4-984b-47e3-8ae3-721cce92c1dd"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "I am thinking of a number between 1 and 99...\n",
            "Enter a guess: 67\n",
            " Your guess is too low!\n",
            "Enter a  new guess: 89\n",
            " Your guess is too high!\n",
            "Enter a  new guess: 74\n",
            " Your guess is too high!\n",
            "Enter a  new guess: 71\n",
            " Your guess is too low!\n",
            "Enter a  new guess: 72\n",
            "Congratulations! 72  is the number I was thinking of!\n",
            "Thanks for playing!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# ***04_random_number***"
      ],
      "metadata": {
        "id": "ipvs6GFXqo1w"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "n_number:int=10\n",
        "min_value:int=1\n",
        "max_value:int=100\n",
        "def main():\n",
        " for i in range(n_number):\n",
        "    random_number:int=random.randint(min_value,max_value)\n",
        "    print(random_number)\n",
        "\n",
        "if __name__==\"__main__\":\n",
        "    main()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K__vn21Tq0dK",
        "outputId": "abe67dcc-5812-44bf-ea67-59cf6e412968"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "46\n",
            "93\n",
            "72\n",
            "97\n",
            "69\n",
            "17\n",
            "97\n",
            "50\n",
            "21\n",
            "43\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}